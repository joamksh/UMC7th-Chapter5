name: Development Deployment

on:
  push:
    branches: [ develop ]  # develop 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # EC2 서버에 배포
      - name: Deploy to Development Server
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          # 개인 키를 사용하여 EC2에 접속
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          # JAR 파일과 application.yml 업로드
          scp -i private_key.pem -o StrictHostKeyChecking=no \
            ./build/libs/*.jar $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/umc7thServer.jar
          echo "${{ secrets.APPLICATION_YML }}" | tr "\\n" "\n" > application.yml
          scp -i private_key.pem -o StrictHostKeyChecking=no \
            ./application.yml $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/application.yml

          # EC2에서 기존 애플리케이션 중지 및 새 버전 실행
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            if pgrep java > /dev/null; then
              pgrep java | xargs -r kill -15
              sleep 5
              pgrep java | xargs -r kill -9
            fi
            nohup java -jar /home/$EC2_USERNAME/umc7thServer.jar --spring.config.location=/home/$EC2_USERNAME/application.yml \
              >> /home/$EC2_USERNAME/app-$(date +%Y%m%d%H%M%S).log 2>&1 &
          "

          # 개인 키 삭제
          rm -f private_key.pem
